{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\n\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst dateTimeInput = document.querySelector('input#datetime-picker');\nconst startBtn = document.querySelector('[data-start]');\nconst counters = {\n  days: document.querySelector('[data-days]'),\n  hours: document.querySelector('[data-hours]'),\n  minutes: document.querySelector('[data-minutes]'),\n  seconds: document.querySelector('[data-seconds]'),\n};\n\nlet userSelectedDate;\nlet timerInterval;\n\nconst startBtnHighlight = isHovered => {\n  if (isHovered === undefined) {\n    startBtn.disabled = true;\n    startBtn.style.color = `#989898`;\n    startBtn.style.backgroundColor = `#cfcfcf`;\n    return;\n  }\n  startBtn.disabled = false;\n  if (isHovered) {\n    startBtn.style.color = `#ffffff`;\n    startBtn.style.backgroundColor = `#6C8CFF`;\n  } else {\n    startBtn.style.color = `#ffffff`;\n    startBtn.style.backgroundColor = `#4E75FF`;\n  }\n};\n\nconst startBtnListen = () => {\n  const events = ['pointerover', 'pointerout', 'click'];\n  events.forEach(eventType => {\n    startBtn.addEventListener(eventType, event => {\n      if (!startBtn.disabled) {\n        if (event.type === 'click') {\n          startTimer();\n        } else if (event.type === 'pointerover') {\n          startBtnHighlight(true);\n        } else if (event.type === 'pointerout') {\n          startBtnHighlight(false);\n        }\n      }\n    });\n  });\n};\n\nflatpickr(dateTimeInput, {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onChange(selectedDates) {\n    userSelectedDate = selectedDates[0];\n    if (userSelectedDate < new Date()) {\n      startBtnHighlight();\n      iziToast.error({\n        theme: 'dark',\n        backgroundColor: '#EF4040',\n        progressBarColor: '#B51B1B',\n        message: 'Please choose a date in the future',\n        position: 'topRight',\n      });\n    } else {\n      startBtnHighlight(false);\n    }\n  },\n});\n\nconst startTimer = () => {\n  if (userSelectedDate > new Date()) {\n    startBtnHighlight();\n    dateTimeInput.disabled = true;\n    timerInterval = setInterval(() => {\n      const now = new Date();\n      const timer = userSelectedDate - now;\n      if (timer <= 0) {\n        clearInterval(timerInterval);\n        dateTimeInput.disabled = false;\n        iziToast.success({\n          theme: 'dark',\n          backgroundColor: '#59A10D',\n          progressBarColor: '#326101',\n          message: 'Timer finished!',\n          position: 'topRight',\n        });\n      } else {\n        updateTimerDisplay(convertMs(timer));\n      }\n    }, 1000);\n  }\n};\n\nconst updateTimerDisplay = ({ days, hours, minutes, seconds }) => {\n  for (const key in counters) {\n    counters[key].textContent = String(\n      { days, hours, minutes, seconds }[key]\n    ).padStart(2, '0');\n  }\n};\n\nconst convertMs = ms => {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n  return { days, hours, minutes, seconds };\n};\n\nstartBtnHighlight();\nstartBtnListen();\n"],"names":["dateTimeInput","startBtn","counters","userSelectedDate","timerInterval","startBtnHighlight","isHovered","startBtnListen","eventType","event","startTimer","flatpickr","selectedDates","iziToast","timer","updateTimerDisplay","convertMs","days","hours","minutes","seconds","key","ms"],"mappings":"+IAMA,MAAMA,EAAgB,SAAS,cAAc,uBAAuB,EAC9DC,EAAW,SAAS,cAAc,cAAc,EAChDC,EAAW,CACf,KAAM,SAAS,cAAc,aAAa,EAC1C,MAAO,SAAS,cAAc,cAAc,EAC5C,QAAS,SAAS,cAAc,gBAAgB,EAChD,QAAS,SAAS,cAAc,gBAAgB,CAClD,EAEA,IAAIC,EACAC,EAEJ,MAAMC,EAAoBC,GAAa,CACrC,GAAIA,IAAc,OAAW,CAC3BL,EAAS,SAAW,GACpBA,EAAS,MAAM,MAAQ,UACvBA,EAAS,MAAM,gBAAkB,UACjC,MACD,CACDA,EAAS,SAAW,GAChBK,GACFL,EAAS,MAAM,MAAQ,UACvBA,EAAS,MAAM,gBAAkB,YAEjCA,EAAS,MAAM,MAAQ,UACvBA,EAAS,MAAM,gBAAkB,UAErC,EAEMM,EAAiB,IAAM,CACZ,CAAC,cAAe,aAAc,OAAO,EAC7C,QAAQC,GAAa,CAC1BP,EAAS,iBAAiBO,EAAWC,GAAS,CACvCR,EAAS,WACRQ,EAAM,OAAS,QACjBC,IACSD,EAAM,OAAS,cACxBJ,EAAkB,EAAI,EACbI,EAAM,OAAS,cACxBJ,EAAkB,EAAK,EAGjC,CAAK,CACL,CAAG,CACH,EAEAM,EAAUX,EAAe,CACvB,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,SAASY,EAAe,CACtBT,EAAmBS,EAAc,CAAC,EAC9BT,EAAmB,IAAI,MACzBE,IACAQ,EAAS,MAAM,CACb,MAAO,OACP,gBAAiB,UACjB,iBAAkB,UAClB,QAAS,qCACT,SAAU,UAClB,CAAO,GAEDR,EAAkB,EAAK,CAE1B,CACH,CAAC,EAED,MAAMK,EAAa,IAAM,CACnBP,EAAmB,IAAI,OACzBE,IACAL,EAAc,SAAW,GACzBI,EAAgB,YAAY,IAAM,CAEhC,MAAMU,EAAQX,EADF,IAAI,KAEZW,GAAS,GACX,cAAcV,CAAa,EAC3BJ,EAAc,SAAW,GACzBa,EAAS,QAAQ,CACf,MAAO,OACP,gBAAiB,UACjB,iBAAkB,UAClB,QAAS,kBACT,SAAU,UACpB,CAAS,GAEDE,EAAmBC,EAAUF,CAAK,CAAC,CAEtC,EAAE,GAAI,EAEX,EAEMC,EAAqB,CAAC,CAAE,KAAAE,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,IAAO,CAChE,UAAWC,KAAOnB,EAChBA,EAASmB,CAAG,EAAE,YAAc,OAC1B,CAAE,KAAAJ,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAGC,CAAG,CAC3C,EAAM,SAAS,EAAG,GAAG,CAErB,EAEML,EAAYM,GAAM,CAKtB,MAAML,EAAO,KAAK,MAAMK,EAAK,KAAG,EAC1BJ,EAAQ,KAAK,MAAOI,EAAK,MAAO,IAAI,EACpCH,EAAU,KAAK,MAAQG,EAAK,MAAO,KAAQ,GAAM,EACjDF,EAAU,KAAK,MAASE,EAAK,MAAO,KAAQ,IAAU,GAAM,EAClE,MAAO,CAAE,KAAAL,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,EAEAf,IACAE,EAAgB"}